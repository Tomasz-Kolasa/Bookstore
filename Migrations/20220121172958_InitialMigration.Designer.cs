// <auto-generated />
using System;
using Bookstore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bookstore.Migrations
{
    [DbContext(typeof(SqliteDbContext))]
    [Migration("20220121172958_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.13");

            modelBuilder.Entity("Bookstore.Entities.ShopProductEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ISBN")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Publisher")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ShopProducts");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ShopProductEntity");
                });

            modelBuilder.Entity("Bookstore.Entities.TransactionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("ShopProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ShopProductId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Bookstore.Entities.BookEntity", b =>
                {
                    b.HasBaseType("Bookstore.Entities.ShopProductEntity");

                    b.Property<string>("AuthorName")
                        .HasColumnType("TEXT");

                    b.Property<string>("AuthorSurname")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("BookEntity");
                });

            modelBuilder.Entity("Bookstore.Entities.MagazineEntity", b =>
                {
                    b.HasBaseType("Bookstore.Entities.ShopProductEntity");

                    b.Property<int>("IssueNumber")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("MagazineEntity");
                });

            modelBuilder.Entity("Bookstore.Entities.TransactionEntity", b =>
                {
                    b.HasOne("Bookstore.Entities.ShopProductEntity", "ShopProduct")
                        .WithMany("Transactions")
                        .HasForeignKey("ShopProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShopProduct");
                });

            modelBuilder.Entity("Bookstore.Entities.ShopProductEntity", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
